# Generated by Django 4.2 on 2023-06-02 17:06

import dirtyfields.dirtyfields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalogio', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('paymentio', '0001_initial'),
        ('accountio', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accountio.organization')),
            ],
            options={
                'unique_together': {('customer', 'organization')},
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('serial_number', models.PositiveIntegerField(blank=True, editable=False, unique=True)),
                ('order_price', models.DecimalField(decimal_places=2, default=0, help_text='This is a price which is initially created by a customer', max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, help_text='This is include the discount_offset percent offer', max_digits=10)),
                ('payable_amount', models.DecimalField(decimal_places=2, default=0, help_text='This is the amount which will be paid by a customer', max_digits=10)),
                ('discount_offset', models.DecimalField(decimal_places=2, default=0, help_text='This is the customer special offer which is given by a organization.', max_digits=10)),
                ('address', models.JSONField()),
                ('completed', models.BooleanField(default=False)),
                ('delivery_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('receiver_name', models.CharField(blank=True, max_length=150)),
                ('receiver_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('customer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('order_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='accountio.organization')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paymentio.paymentmethod')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('selling_price', models.DecimalField(decimal_places=2, help_text='this will calculate the final price of the product with discount price', max_digits=10)),
                ('discount_price', models.DecimalField(decimal_places=2, default=0, help_text='we only accept percentage value.', max_digits=5)),
                ('quantity', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('updated_quantity', models.PositiveIntegerField(default=0, help_text='Update the order quantity after returning the quantity', validators=[django.core.validators.MinValueValidator(1)])),
                ('delivery_quantity', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='orderio.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogio.product')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('order', 'product')},
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ReturnOrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('returned_quantity', models.PositiveIntegerField(default=0)),
                ('note', models.CharField(blank=True, max_length=800)),
                ('description', models.TextField(blank=True)),
                ('is_damage', models.BooleanField(help_text='If true, this will save to product damage_stock, otherwise it will save to product stock')),
                ('order', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='orderio.order')),
                ('order_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderio.orderproduct')),
                ('organization', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='accountio.organization')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OrderDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('ORDER_PLACED', 'Order Placed'), ('ACCEPTED', 'Accepted'), ('PROCESSING', 'Processing'), ('PACKAGING', 'Packaging'), ('WAITING_FOR_DELIVERER', 'Waiting For Deliverer'), ('ON_THE_WAY', 'On The Way'), ('PARTIAL_RETURNED', 'Partial Returned'), ('RETURNED', 'Returned'), ('CANCELED', 'Canceled'), ('COMPLETED', 'Completed')], default='ORDER_PLACED', max_length=50)),
                ('stage', models.CharField(choices=[('PENDING', 'Pending'), ('CURRENT', 'Current'), ('COMPLETED', 'Completed')], max_length=15)),
                ('order', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivery_statuses', to='orderio.order')),
            ],
            options={
                'unique_together': {('order', 'status')},
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='orderio.cart')),
                ('organization', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='accountio.organization')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_carts', to='catalogio.product')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('cart', 'product')},
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
    ]
