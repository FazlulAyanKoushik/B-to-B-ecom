# Generated by Django 4.2 on 2023-06-02 17:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('orderio', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accountio', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='organizationuser',
            name='organization',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='accountio.organization'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='organizationuser',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='transactionorganizationuser',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orderio.order'),
        ),
        migrations.AddField(
            model_name='transactionorganizationuser',
            name='organization',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='accountio.organization'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='transactionorganizationuser',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='organizationuser',
            unique_together={('organization', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='transactionorganizationuser',
            unique_together={('order', 'organization')},
        ),
        migrations.AddConstraint(
            model_name='organizationuser',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('user',), name='user_have_one_default_organization', violation_error_message='A merchant can have only one default organization.'),
        ),
    ]
